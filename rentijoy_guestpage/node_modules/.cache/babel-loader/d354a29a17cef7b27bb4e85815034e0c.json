{"ast":null,"code":"var _jsxFileName = \"/home/tringapps/Rentijoy/rentijoy_guestpage/src/components/movieRender/MovieRender.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieBodyRenderFunction } from './Homelist';\nimport { fetchMovieList, fetchMovieDetail, fetchUserMovieDetail } from './Api/apis';\nimport MovieCast from './movie cast and details/cast';\nimport MovieBasic from './movie cast and details/basic';\nimport './Home.css';\n/****************  Function to render details of cast inside the Single movie detail*****************/\n\n/****************  Function to render Single Movie detail with buy rent option*****************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SingleMovie() {\n  _s();\n\n  let path = useParams();\n  let movieID = path.movie;\n  let userdetail = localStorage.getItem('user_mail');\n  userdetail = JSON.parse(userdetail);\n  const userid = userdetail.users.userId;\n  const [movie, setMovie] = useState([{}]);\n  const [cast, setcast] = useState([]);\n  const [userm, setUserm] = useState(false);\n  useEffect(() => {\n    fetchUserMovieDetail(userid, movieID).then(res => {\n      setUserm(res.data.BuyedStatus || res.data.RentStatus);\n    }).catch(e => console.log(e));\n    fetchMovieDetail(movieID).then(res => {\n      setMovie(res.data);\n      setcast(res.data.movieCast);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, [movieID, userid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-detailed-page\",\n    children: [/*#__PURE__*/_jsxDEV(MovieBasic, {\n      movie: movie,\n      userm: userm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MovieCast, {\n      movie: movie,\n      cast: cast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n/****************  Function to render list of movies Grouped by genre*****************/\n\n_s(SingleMovie, \"vHIMFXD7fFim9pt208BQGIRMF6k=\", false, function () {\n  return [useParams];\n});\n\n_c = SingleMovie;\nexport default function MoviesByGenre() {\n  _s2();\n\n  let path = useParams();\n  let genre = path.genre;\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    fetchMovieList(genre).then(resp => setList(resp.data)).catch(e => console.log(e));\n  }, [genre]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"listtitle\",\n      children: `${genre[0].toUpperCase() + genre.slice(1, genre.length)} Movies`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listBody\",\n      children: list.map(obj => {\n        return movieBodyRenderFunction(obj);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(MoviesByGenre, \"0H7gv/+nCOoVadnBxC6EUngMTVc=\", false, function () {\n  return [useParams];\n});\n\n_c2 = MoviesByGenre;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleMovie\");\n$RefreshReg$(_c2, \"MoviesByGenre\");","map":{"version":3,"sources":["/home/tringapps/Rentijoy/rentijoy_guestpage/src/components/movieRender/MovieRender.js"],"names":["React","useState","useEffect","useParams","movieBodyRenderFunction","fetchMovieList","fetchMovieDetail","fetchUserMovieDetail","MovieCast","MovieBasic","SingleMovie","path","movieID","movie","userdetail","localStorage","getItem","JSON","parse","userid","users","userId","setMovie","cast","setcast","userm","setUserm","then","res","data","BuyedStatus","RentStatus","catch","e","console","log","movieCast","MoviesByGenre","genre","list","setList","resp","toUpperCase","slice","length","map","obj"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport { movieBodyRenderFunction } from './Homelist'\nimport { fetchMovieList,fetchMovieDetail,fetchUserMovieDetail } from './Api/apis'\nimport MovieCast from './movie cast and details/cast'\nimport MovieBasic from './movie cast and details/basic'\nimport './Home.css'\n\n/****************  Function to render details of cast inside the Single movie detail*****************/\n\n/****************  Function to render Single Movie detail with buy rent option*****************/\nexport function SingleMovie(){\n    let path=useParams();\n    let movieID=path.movie;\n    let userdetail = localStorage.getItem('user_mail')\n    userdetail = JSON.parse(userdetail)\n    const userid=userdetail.users.userId;\n    const[movie,setMovie]=useState([{}]);\n    const [cast,setcast]=useState([])\n    const [userm,setUserm]=useState(false)\n    useEffect(()=>{\n    fetchUserMovieDetail(userid,movieID)\n    .then((res)=>{setUserm(res.data.BuyedStatus||res.data.RentStatus)})\n    .catch(e=>console.log(e))\n    fetchMovieDetail(movieID)\n    .then(res=>{\n      setMovie(res.data); \n      setcast(res.data.movieCast);\n    })\n    .catch(e=>{console.log(e)})\n    },[movieID,userid])\n    return(\n        <div className=\"movie-detailed-page\">\n        <MovieBasic movie={movie} userm={userm}/>\n        <MovieCast movie={movie} cast={cast}/>\n      </div>\n        )\n}\n/****************  Function to render list of movies Grouped by genre*****************/\nexport default function MoviesByGenre() {\nlet path= useParams();\nlet genre=path.genre;\nconst[list,setList]=useState([])\nuseEffect(()=>{\n    fetchMovieList(genre)\n    .then(resp =>setList(resp.data))\n    .catch(e=>console.log(e));\n},[genre])\n    return (\n        <div>\n            <h1 className=\"listtitle\">{`${genre[0].toUpperCase()+genre.slice(1,genre.length)} Movies`}</h1>\n            <div className=\"listBody\">\n            {\n                list.map((obj)=>{return(movieBodyRenderFunction (obj))})\n            }\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}